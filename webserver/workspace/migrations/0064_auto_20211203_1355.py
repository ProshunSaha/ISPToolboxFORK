# Generated by Django 3.1.13 on 2021-12-03 21:55
# (c) Meta Platforms, Inc. and affiliates. Copyright

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sessions', '0001_initial'),
        ('workspace', '0063_auto_20211203_1347'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='cpelocation',
            name='sector',
        ),
        migrations.AlterField(
            model_name='cpelocation',
            name='ap',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='workspace.accesspointlocation'),
        ),
        migrations.CreateModel(
            name='CPESectorLocation',
            fields=[
                ('geojson', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('uneditable', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('height', models.FloatField(help_text='\n        This height value is relative to the terrain in meters. When object is first created the height field\n        is taken from the AP "default_cpe_height", it is then converted to DTM height. The following\n        saves are all relative to terrain.\n        ', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1000)])),
                ('map_session', models.ForeignKey(db_column='session', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='workspace.workspacemapsession')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='workspace.accesspointsector')),
                ('session', models.ForeignKey(db_column='django_session', help_text='This is a django session - different than map session', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sessions.session')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
