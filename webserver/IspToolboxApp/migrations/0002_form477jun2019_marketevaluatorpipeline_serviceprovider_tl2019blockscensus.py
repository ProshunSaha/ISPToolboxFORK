# Generated by Django 3.0.8 on 2020-08-20 23:07

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('IspToolboxApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Form477Jun2019',
            fields=[
                ('logrecno', models.AutoField(primary_key=True, serialize=False)),
                ('provider_id', models.IntegerField(blank=True, null=True)),
                ('frn', models.IntegerField(blank=True, null=True)),
                ('providername', models.CharField(blank=True, max_length=255, null=True)),
                ('dbaname', models.CharField(blank=True, max_length=255, null=True)),
                ('holdingcompanyname', models.CharField(blank=True, max_length=255, null=True)),
                ('hoconum', models.IntegerField(blank=True, null=True)),
                ('hocofinal', models.CharField(blank=True, max_length=255, null=True)),
                ('stateabbr', models.CharField(blank=True, max_length=20, null=True)),
                ('blockcode', models.CharField(blank=True, max_length=15, null=True)),
                ('techcode', models.IntegerField(blank=True, null=True)),
                ('consumer', models.IntegerField(blank=True, null=True)),
                ('maxaddown', models.FloatField(blank=True, null=True)),
                ('maxadup', models.FloatField(blank=True, null=True)),
                ('business', models.FloatField(blank=True, null=True)),
                ('maxcirdown', models.FloatField(blank=True, null=True)),
                ('maxcirup', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'form477jun2019',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tl2019BlocksCensus',
            fields=[
                ('gid', models.AutoField(primary_key=True, serialize=False)),
                ('statefp10', models.CharField(blank=True, max_length=2, null=True)),
                ('countyfp10', models.CharField(blank=True, max_length=3, null=True)),
                ('tractce10', models.CharField(blank=True, max_length=6, null=True)),
                ('blockce10', models.CharField(blank=True, max_length=4, null=True)),
                ('geoid10', models.CharField(blank=True, max_length=15, null=True)),
                ('name10', models.CharField(blank=True, max_length=10, null=True)),
                ('mtfcc10', models.CharField(blank=True, max_length=5, null=True)),
                ('ur10', models.CharField(blank=True, max_length=1, null=True)),
                ('uace10', models.CharField(blank=True, max_length=5, null=True)),
                ('uatype', models.CharField(blank=True, max_length=1, null=True)),
                ('funcstat10', models.CharField(blank=True, max_length=1, null=True)),
                ('aland10', models.FloatField(blank=True, null=True)),
                ('awater10', models.FloatField(blank=True, null=True)),
                ('intptlat10', models.CharField(blank=True, max_length=11, null=True)),
                ('intptlon10', models.CharField(blank=True, max_length=12, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('geog', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, geography=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'tl_2019_blocks_census',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('logrecno', models.IntegerField(primary_key=True, serialize=False)),
                ('techcode', models.IntegerField(blank=True, null=True)),
                ('maxaddown', models.FloatField(blank=True, null=True)),
                ('maxadup', models.FloatField(blank=True, null=True)),
                ('providername', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarketEvaluatorPipeline',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('include_geojson', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('exclude_geojson', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('incomeServiceProvidersAvailable', models.BooleanField(default=True)),
                ('buildingPrecomputed', models.BooleanField(default=True)),
                ('buildingPolygons', django.contrib.gis.db.models.fields.GeometryCollectionField(blank=True, null=True, srid=4326)),
                ('buildingCount', models.BigIntegerField(default=0)),
                ('buildingCompleted', models.DateTimeField(blank=True, null=True)),
                ('buildingError', models.CharField(blank=True, max_length=100, null=True)),
                ('averageMedianIncome', models.FloatField(default=0)),
                ('incomeComplete', models.DateTimeField(blank=True, null=True)),
                ('incomeError', models.CharField(blank=True, max_length=100, null=True)),
                ('serviceProviderComplete', models.DateTimeField(blank=True, null=True)),
                ('serviceProviderError', models.CharField(blank=True, max_length=100, null=True)),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('error', models.CharField(blank=True, max_length=100, null=True)),
                ('serviceProvidersLogRecNos', models.ManyToManyField(to='IspToolboxApp.ServiceProvider')),
            ],
        ),
    ]
